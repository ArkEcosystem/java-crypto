plugins {
    id 'java'
    id 'maven-publish'
    id 'jacoco'
    id 'com.diffplug.gradle.spotless' version '3.27.2'
}

repositories {
    jcenter()
    mavenCentral()
}

group = 'org.arkecosystem'
version = '1.2.3'

dependencies {
    compile group: 'org.bitcoinj', name: 'bitcoinj-core', version: '0.15.8'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
    compile 'com.google.guava:guava:28.2-jre'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.0'
}

publishing {
    repositories {
        jcenter()
        mavenCentral() {
            name = "MavenRepo"
            url = uri("https://oss.sonatype.org/service/local/staging/deploy/maven2")
            credentials {
                username = System.getenv("MVN_USERNAME")
                password = System.getenv("MVN_USERNAME")
            }
        }

        maven {
            name = "github"
            url = uri("https://maven.pkg.github.com/arkecosystem/java-crypto")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("PASSWORD")
            }
        }

        publications {
            gpr(MavenPublication) {
                from(components.java)
            }
            mavenJava(MavenPublication) {
                artifactId = 'java-crypto'
                from(components.java)
                pom {
                    name = 'java-crypto'
                    versionMapping {
                        usage('java-api') {
                            fromResolutionOf('runtimeClasspath')
                        }
                        usage('java-runtime') {
                            fromResolutionResult()
                        }
                    }
                    description = 'A Lightweight ARK Core JAVA Crypto SDK Library'
                    url = 'https://sdk.ark.dev/java/crypto'
                    licenses {
                        license {
                            name = 'MIT License'
                            url = 'https://github.com/ArkEcosystem/java-crypto/blob/master/LICENSE'
                        }
                    }
                    developers {
                        developer {
                            id = 'kovaczan'
                            name = 'Žan Kovač'
                            email = 'zan@ark.io'
                        }
                        developer {
                            id = 'kristjank'
                            name = 'Kristjan Košič'
                            email = 'kristjan@ark.io'
                        }
                    }
                    scm {
                        connection = 'scm:git:git://github.com/arkecosystem/java-crypto.git'
                        developerConnection = 'scm:git:ssh://github.com/arkecosystem/java-crypto.git'
                        url = 'https://sdk.ark.dev/java/crypto'
                    }
                }
            }
        }
    }
}

javadoc {
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}


test {
    useJUnitPlatform()
    failFast = true
    testLogging {
        events 'PASSED', 'FAILED', 'SKIPPED'
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}

wrapper {
    gradleVersion = '6.2.0'
}

spotless {
    java {
        target fileTree(projectDir) {
            include 'src/main/**/*.java'
            include 'src/test/**/*.java'
            exclude '**/build/**'
        }
        googleJavaFormat('1.1').aosp()
    }
}

task formatCode(dependsOn: ['spotlessApply'])

task fatJar(type: Jar) {
    manifest.from jar.manifest
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    } {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }
    with jar
}

task javadocJar(type: Jar) {
    from javadoc
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
}

build.dependsOn 'spotlessApply'
