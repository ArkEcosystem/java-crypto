buildscript {
    dependencies {
        classpath "com.diffplug.spotless:spotless-plugin-gradle:3.27.1"
    }
}

plugins {
    id 'java'
    id 'maven'
    id 'maven-publish'
    id 'signing'
    id 'jacoco'
}

apply plugin:'java'
apply plugin:'maven'
apply plugin:'maven-publish'
apply plugin: com.diffplug.gradle.spotless.SpotlessPlugin

repositories {
    jcenter()
    mavenCentral()
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "file://${buildDir}/repo") {}

            //repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2") {
            // authentication(userName: '', password: '')
            // }

            //   snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
            //      authentication(userName: ossrhUsername, password: ossrhPassword)
            //  }

            pom.project {
                groupId = 'org.arkecosystem'
                version = '0.1.6'
                artifactId = 'crypto'

                name = 'java-crypto'
                description = 'A simple Cryptography Implementation in Java for the Ark Blockchain.'
                url = 'https://github.com/ArkEcosystem/java-crypto'
                inceptionYear = '2018'

                licenses {
                    license {
                        name = 'MIT'
                        distribution = 'repo'
                    }
                }

                developers {
                    developer {
                        name = 'Brian Faust'
                        email = 'brian@ark.io'
                        organization = 'Ark Ecosystem'
                        organizationUrl = 'https://ark.io'
                    }
                    developer {
                        name = 'Joshua Noack'
                        email = 'joshua@ark.io'
                        organization = 'Ark Ecosystem'
                        organizationUrl = 'https://ark.io'
                    }
                    developer {
                        name = 'Žan Kovač'
                        email = 'zan@ark.io'
                        organization = 'Ark Ecosystem'
                        organizationUrl = 'https://ark.io'
                    }
                    developer {
                        name = 'Kristjan Košič'
                        email = 'kristjan@ark.io'
                        organization = 'Ark Ecosystem'
                        organizationUrl = 'https://ark.io'
                    }
                }

                scm {
                    connection = 'scm:git:git://github.com/ArkEcosystem/java-crypto.git'
                    developerConnection = 'scm:git:ssh://github.com:ArkEcosystem/java-crypto.git'
                    url = 'https://github.com/ArkEcosystem/java-crypto/tree/0.1.6'
                }
            }
        }
    }
}

if (project.hasProperty("signing.keyId")) {
    apply plugin: 'signing'
    signing {
        sign configurations.archives
    }
}

dependencies {
    compile group: 'org.bitcoinj', name: 'bitcoinj-core', version: '0.15.6'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
    compile 'com.google.guava:guava:28.2-jre'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.5.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.5.2'
}

test {
    useJUnitPlatform()
    failFast = true
    testLogging {
        events 'PASSED', 'FAILED', 'SKIPPED'
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}

wrapper {
    gradleVersion = '5.6.2'
}
    spotless {
        java {
            target fileTree(projectDir) {
                include 'src/main/**/*.java'
                include 'src/test/**/*.java'
                exclude '**/build/**'
            }
            googleJavaFormat('1.1').aosp()
        }
    }


task formatCode(dependsOn: ['spotlessApply'])

build.dependsOn 'spotlessApply'
